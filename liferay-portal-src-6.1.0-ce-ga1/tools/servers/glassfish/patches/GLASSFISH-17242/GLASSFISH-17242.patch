Index: branches/3.1.2/deployment/admin/src/main/java/org/glassfish/deployment/admin/InstanceDeployCommand.java
===================================================================
--- branches/3.1.2/deployment/admin/src/main/java/org/glassfish/deployment/admin/InstanceDeployCommand.java	(revision 50406)
+++ branches/3.1.2/deployment/admin/src/main/java/org/glassfish/deployment/admin/InstanceDeployCommand.java	(revision 50407)
@@ -1,7 +1,7 @@
 /*
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  *
- * Copyright (c) 2010 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2010-2011 Oracle and/or its affiliates. All rights reserved.
  *
  * The contents of this file are subject to the terms of either the GNU
  * General Public License Version 2 only ("GPL") or the Common Development
@@ -62,6 +62,7 @@
 import org.glassfish.internal.deployment.ExtendedDeploymentContext;
 import org.glassfish.internal.deployment.SnifferManager;
 import org.glassfish.deployment.common.DeploymentUtils;
+import com.sun.enterprise.deployment.deploy.shared.Util;
 import org.glassfish.deployment.versioning.VersioningUtils;
 import org.jvnet.hk2.annotations.Service;
 import org.jvnet.hk2.annotations.Inject;
@@ -265,7 +266,7 @@
         final ZipFile zipFile = new ZipFile(generatedContentParam);
         for (Enumeration<? extends ZipEntry> entries = zipFile.entries(); entries.hasMoreElements();) {
             final ZipEntry zipEntry = entries.nextElement();
-            final URI outputFileURI = baseURI.resolve(zipEntry.getName());
+            final URI outputFileURI = Util.resolve(baseURI, zipEntry.getName());
             final File outputFile = new File(outputFileURI);
             if (zipEntry.isDirectory()) {
                 outputFile.mkdirs();
Index: branches/3.1.2/deployment/common/src/main/java/com/sun/enterprise/deployment/deploy/shared/Util.java
===================================================================
--- branches/3.1.2/deployment/common/src/main/java/com/sun/enterprise/deployment/deploy/shared/Util.java	(revision 50406)
+++ branches/3.1.2/deployment/common/src/main/java/com/sun/enterprise/deployment/deploy/shared/Util.java	(revision 50407)
@@ -1,7 +1,7 @@
 /*
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  *
- * Copyright (c) 2008-2010 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2008-2011 Oracle and/or its affiliates. All rights reserved.
  *
  * The contents of this file are subject to the terms of either the GNU
  * General Public License Version 2 only ("GPL") or the Common Development
@@ -41,6 +41,8 @@
 package com.sun.enterprise.deployment.deploy.shared;
 
 import java.net.URI;
+import java.net.URL;
+import java.net.URISyntaxException;
 
 /**
  * Utility logic.
@@ -48,6 +50,10 @@
  */
 public class Util {
 
+    private static final String SPACE = " ";  
+
+    private static final String ENCODED_SPACE = "%20";  
+
    /**
     * Returns the name portion of the specified URI.  This is defined as the 
     * part of the URI's path after the final slash (if any).  If the URI ends
@@ -73,4 +79,27 @@
         }
         return name;
     }
+
+   /**
+    * Returns URI for the specified URL.  This method will take care of 
+    * the space in URL.
+    * 
+    * @param url the URL to convert to URI
+    * @return the URI
+    */
+    public static URI toURI(URL url) throws URISyntaxException { 
+        return new URI(url.toString().replaceAll(SPACE, ENCODED_SPACE));
+    }
+
+   /**
+    * Constructs a new URI by parsing the given string and then resolving it
+    * against the base URI.  This method will take care of the space in String.
+    *
+    * @param baseUri the base URI to resolve against
+    * @param uriString the String to construct URI and resolve 
+    * @return the resulting URI
+    */
+    public static URI resolve(URI baseUri, String uriString) {
+        return baseUri.resolve(uriString.replaceAll(SPACE, ENCODED_SPACE));
+    }
 }
Index: branches/3.1.2/core/kernel/src/main/java/com/sun/enterprise/v3/server/SnifferManagerImpl.java
===================================================================
--- branches/3.1.2/core/kernel/src/main/java/com/sun/enterprise/v3/server/SnifferManagerImpl.java	(revision 50406)
+++ branches/3.1.2/core/kernel/src/main/java/com/sun/enterprise/v3/server/SnifferManagerImpl.java	(revision 50407)
@@ -1,7 +1,7 @@
 /*
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  *
- * Copyright (c) 1997-2010 Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 1997-2011 Oracle and/or its affiliates. All rights reserved.
  *
  * The contents of this file are subject to the terms of either the GNU
  * General Public License Version 2 only ("GPL") or the Common Development
@@ -50,6 +50,7 @@
 import org.glassfish.internal.deployment.SnifferManager;
 import org.glassfish.internal.deployment.ApplicationInfoProvider;
 import org.glassfish.internal.deployment.ExtendedDeploymentContext;
+import com.sun.enterprise.deployment.deploy.shared.Util;
 import org.glassfish.deployment.common.DeploymentUtils;
 import com.sun.enterprise.util.LocalStringManagerImpl;
 
@@ -265,7 +266,7 @@
                     // library jars
                     List<URL> moduleLibraries = DeploymentUtils.getModuleLibraryJars(context);
                     for (URL url : moduleLibraries) {
-                        uris.add(url.toURI());
+                        uris.add(Util.toURI(url));
                     }
                 } else {
                     // non-standalone case, we need to look at other libraries too
@@ -273,7 +274,7 @@
                     if (appInfoProvider != null) {
                         List<URL> libraryJars = appInfoProvider.getLibraryJars(context);
                         for (URL url : libraryJars) {
-                            uris.add(url.toURI());
+                            uris.add(Util.toURI(url));
                         }
                     }
                 }
