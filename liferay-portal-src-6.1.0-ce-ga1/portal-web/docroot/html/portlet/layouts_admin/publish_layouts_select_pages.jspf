<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
int total = results.size();

List<String> headerNames = new ArrayList<String>();

headerNames.add("pages");
headerNames.add("options");
headerNames.add("type");

SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, total, portletURL, headerNames, "there-are-no-selected-pages-all-pages-will-therefore-be-exported");

searchContainer.setTotal(total);
searchContainer.setResults(results);

RowChecker rowChecker = new AlwaysTrueRowChecker(renderResponse);

rowChecker.setAlign("left");
rowChecker.setFormName("exportPagesFm");
rowChecker.setValign("top");

searchContainer.setRowChecker(rowChecker);

List resultRows = searchContainer.getResultRows();

for (int i = 0; i < results.size(); i++) {
	Layout curLayout = (Layout)results.get(i);

	ResultRow row = new ResultRow(curLayout, curLayout.getPrimaryKey(), i);

	if (LayoutStagingUtil.isBranchingLayout(curLayout)) {
%>

		<liferay-util:buffer var="layoutDetails">

			<%
			LayoutRevision layoutRevision = null;

			String layoutBranchName = null;

			if (layoutSetBranchId > 0) {
				try {
					layoutRevision = LayoutRevisionLocalServiceUtil.getLayoutRevision(layoutSetBranchId, curLayout.getPlid(), true);
				}
				catch (NoSuchLayoutRevisionException nslre) {
				}

				if (layoutRevision != null) {
					List<LayoutBranch> layoutBranches = LayoutBranchLocalServiceUtil.getLayoutBranches(layoutSetBranchId, curLayout.getPlid(), QueryUtil.ALL_POS, QueryUtil.ALL_POS, null);

					if (layoutBranches.size() > 1) {
						LayoutBranch layoutBranch = layoutRevision.getLayoutBranch();

						layoutBranchName = layoutBranch.getName();
					}
				}
			}
			%>

			<span class="nobr <%= layoutRevision == null ? "page-not-exportable" : StringPool.BLANK %>">
				<%= curLayout.getName(locale) %>

				<c:if test="<%= Validator.isNotNull(layoutBranchName) %>">
					<span class="layout-variation-name">
						[<liferay-ui:message key="<%= layoutBranchName %>" />]
					</span>
				</c:if>

				<c:if test="<%= layoutRevision == null %>">
					<liferay-ui:icon-help message="there-is-not-a-version-of-this-page-marked-as-ready-for-publication" />
				</c:if>
			</span>
		</liferay-util:buffer>

<%
		row.addText("left", "top", layoutDetails);
	}
	else {
		row.addText("left", "top", curLayout.getName(locale));
	}

	JSPSearchEntry jspSearchEntry = new JSPSearchEntry();

	jspSearchEntry.setAlign("left");
	jspSearchEntry.setColspan(1);
	jspSearchEntry.setPath("/html/portlet/layouts_admin/publish_layout_options.jsp");
	jspSearchEntry.setValign("top");

	row.addSearchEntry(jspSearchEntry);

	row.addText("left", "top", LanguageUtil.get(pageContext, StringUtil.replace(curLayout.getType(), "_", "-")));

	resultRows.add(row);
}
%>

<c:choose>
	<c:when test="<%= !results.isEmpty() %>">
		<div id="<portlet:namespace />pane">
			<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" paginate="<%= false %>" />
		</div>
	</c:when>
	<c:otherwise>
		<div class="portlet-msg-info">
			<liferay-ui:message key="there-are-no-selected-pages-all-pages-will-therefore-be-exported" />
		</div>
	</c:otherwise>
</c:choose>

<aui:input name="scope" type="hidden" value='<%= (results.isEmpty() ? "all-pages" : "selected-pages") %>' />

<aui:button-row>

	<%
	String taglibUrl = "AUI().DialogManager.refreshByChild('#" + renderResponse.getNamespace() + "exportPagesFm');";
	%>

	<aui:button onClick="<%= taglibUrl %>" value='<%= results.isEmpty() ? "select-pages" : "change-selection" %>' />
</aui:button-row>

<aui:input helpMessage="delete-missing-layouts-staging-help" label="delete-missing-layouts" name="<%= PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS %>" type="checkbox" />