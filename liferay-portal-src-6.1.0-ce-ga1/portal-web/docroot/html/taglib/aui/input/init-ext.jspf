<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
if (!useNamespace) {
	namespace = StringPool.BLANK;
}

String baseType = GetterUtil.getString((String)request.getAttribute("aui:input:baseType"));
String forLabel = namespace + GetterUtil.getString((String)request.getAttribute("aui:input:forLabel"));
boolean required = GetterUtil.getBoolean((String)request.getAttribute("aui:input:required"));

id = namespace + id;

if (Validator.isNull(label) && changesContext) {
	StringBundler sb = new StringBundler(5);

	sb.append(LanguageUtil.get(pageContext, title));
	sb.append(StringPool.SPACE);
	sb.append(StringPool.OPEN_PARENTHESIS);
	sb.append(LanguageUtil.get(pageContext, "changing-the-value-of-this-field-will-reload-the-page"));
	sb.append(StringPool.CLOSE_PARENTHESIS);

	title = sb.toString();
}
else if (Validator.isNotNull(title)) {
	title = LanguageUtil.get(pageContext, title);
}

boolean checkboxField = baseType.equals("checkbox") || baseType.equals("boolean");
boolean choiceField = checkboxField || baseType.equals("radio");

boolean showForLabel = true;

if ((type.equals("assetCategories")) || baseType.equals(Date.class.getName())) {
	showForLabel = false;
}

if (type.equals("assetTags")) {
	forLabel += "assetTagNames";
}

if (checkboxField) {
	forLabel += "Checkbox";
}

if (choiceField) {
	inlineLabel = "right";
}

String baseTypeCss = TextFormatter.format(baseType.toLowerCase(), TextFormatter.K);

String fieldCss = AUIUtil.buildCss(AUIUtil.FIELD_PREFIX, baseTypeCss, inlineField, disabled, choiceField, first, last, cssClass);
String inputCss = AUIUtil.buildCss(AUIUtil.INPUT_PREFIX, baseTypeCss, false, false, choiceField, false, false, inputCssClass);
String labelTag = AUIUtil.buildLabel(inlineLabel, showForLabel, forLabel);
%>