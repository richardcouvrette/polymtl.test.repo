<?xml version="1.0"?>

<project name="portal" basedir="." default="compile" xmlns:antelope="antlib:ise.antelope.tasks">
	<property name="project.dir" value="." />

	<import file="build-common.xml" />

	<target name="all">
		<antcall target="clean" />
		<antcall target="start" />
		<antcall target="deploy" />
	</target>

	<target name="clean">
		<ant dir="classes" target="clean" inheritAll="false" />

		<ant dir="portal-service" target="clean" inheritAll="false" />

		<ant dir="util-bridges" target="clean" inheritAll="false" />
		<ant dir="util-java" target="clean" inheritAll="false" />
		<ant dir="util-taglib" target="clean" inheritAll="false" />

		<ant dir="portal-impl" target="clean" inheritAll="false" />

		<ant dir="portal-web" target="clean" inheritAll="false" />

		<ant dir="sql" target="clean" inheritAll="false" />

		<delete dir="${doc.dir}" />

		<delete>
			<fileset dir="." includes="*.ear,*.jar,*.war,*.zip" />
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset
				dir="${app.server.bin.dir}"
				includes="*.log*"
			/>
		</delete>

		<delete failonerror="false">
			<fileset
				dir="${liferay.home}/data/hsql"
				includes="${database.name}.*"
			/>
		</delete>

		<if>
			<equals arg1="${app.server.type}" arg2="glassfish" />
			<then>
				<delete dir="${app.server.instance.dir}/applications/liferay-portal" />
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="tomcat" />
			<then>
				<delete failonerror="false">
					<fileset
						dir="${app.server.dir}/conf/Catalina/localhost"
						includes="*-hook.xml,*-portlet.xml"
					/>
				</delete>

				<ant dir="support-tomcat" target="clean" inheritAll="false" />
			</then>
		</if>

		<delete failonerror="false">
			<fileset
				dir="${app.server.classes.portal.dir}"
				includes="portal-*.properties,system-*.properties"
			/>
		</delete>

		<delete includeemptydirs="true" failonerror="false">
			<fileset
				dir="${app.server.deploy.dir}"
				includes="*-ext/**,*-ext.war/**,*-hook/**,*-hook.war/**,*-layouttpl/**,*-layouttpl.war/**,*-portlet/**,*-portlet.war/**,*-theme/**,*-theme.war/**,*-web/**,*-web.war/**"
			/>
		</delete>

		<delete failonerror="false">
			<fileset
				dir="${app.server.lib.global.dir}"
				excludes="${jdbc.drivers}"
			/>
		</delete>

		<delete failonerror="false">
			<fileset
				dir="${app.server.lib.portal.dir}"
				excludes="${jdbc.drivers}"
			/>
		</delete>

		<if>
			<equals arg1="${clean.log.dir}" arg2="true" />
			<then>
				<delete dir="${app.server.log.dir}" />
			</then>
		</if>

		<if>
			<not>
				<and>
					<equals arg1="${app.server.type}" arg2="tomcat" />
					<antelope:endswith string="${app.server.portal.dir}" with="/portal-web/docroot" />
				</and>
			</not>
			<then>
				<delete dir="${app.server.portal.dir}" />
				<delete file="${app.server.portal.dir}" />
			</then>
		</if>

		<if>
			<equals arg1="${clean.temp.dir}" arg2="true" />
			<then>
				<delete dir="${app.server.temp.dir}" />
			</then>
		</if>

		<if>
			<equals arg1="${clean.work.dir}" arg2="true" />
			<then>
				<delete dir="${app.server.work.dir}" />
			</then>
		</if>

		<antcall target="print-current-time" />
	</target>

	<target name="compile">
		<ant dir="portal-service" target="compile" inheritAll="false" />

		<ant dir="util-bridges" target="compile" inheritAll="false" />
		<ant dir="util-java" target="compile" inheritAll="false" />
		<ant dir="util-taglib" target="compile" inheritAll="false" />

		<ant dir="portal-impl" target="compile" inheritAll="false" />
	</target>

	<target name="deploy">
		<if>
			<equals arg1="${app.server.type}" arg2="glassfish" />
			<then>
				<delete dir="${app.server.portal.dir}" />
				<delete file="${app.server.portal.dir}" />
			</then>
		</if>

		<if>
			<and>
				<equals arg1="${app.server.type}" arg2="tomcat" />
				<not>
					<available file="${app.server.tomcat.dir}/lib/catalina.jar" />
				</not>
			</and>
			<then>
				<fail>
.

Tomcat is not installed in ${app.server.tomcat.dir}. If you already have Tomcat
installed, make sure the property "$${app.server.tomcat.dir}" points to your
Tomcat installation. If you wish to automatically install Tomcat into
${app.server.tomcat.dir}, then run "ant -buildfile build-dist.xml unzip-tomcat".
				</fail>
			</then>
		</if>

		<ant dir="portal-service" target="deploy" inheritAll="false" />

		<ant dir="util-bridges" target="deploy" inheritAll="false" />
		<ant dir="util-java" target="deploy" inheritAll="false" />
		<ant dir="util-taglib" target="deploy" inheritAll="false" />

		<ant dir="portal-impl" target="deploy" inheritAll="false" />

		<ant dir="portal-web" target="deploy" inheritAll="false" />

		<copy todir="${liferay.home}/data/hsql">
			<fileset dir="sql">
				<include name="${database.name}.properties" />
				<include name="${database.name}.script" />
			</fileset>
		</copy>

		<antcall target="deploy-properties" />

		<copy todir="${app.server.lib.global.dir}">
			<fileset dir="lib/development" includes="hsql.jar,jtds.jar,mysql.jar,postgresql.jar" />
			<fileset dir="lib/global" />
		</copy>

		<if>
			<isset property="jdbc.drivers.optional.dir" />
			<then>
				<copy todir="${app.server.lib.global.dir}">
					<fileset
						dir="${jdbc.drivers.optional.dir}"
						includes="*.jar"
					/>
				</copy>
			</then>
		</if>

		<copy todir="${app.server.lib.portal.dir}">
			<fileset dir="lib/portal" />
		</copy>

		<if>
			<equals arg1="${app.server.type}" arg2="glassfish" />
			<then>
				<loadfile property="domain.xml.content" srcfile="${app.server.glassfish.instance.dir}/config/domain.xml" />

				<antelope:stringutil string="${domain.xml.content}" property="domain.xml.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${domain.xml.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.glassfish.instance.dir}/config/domain.xml">
							<replacetoken><![CDATA[<jvm-options>-Xmx512m</jvm-options>]]></replacetoken>
							<replacevalue><![CDATA[<jvm-options>-Dfile.encoding=UTF8</jvm-options>
	<jvm-options>-Djava.net.preferIPv4Stack=true</jvm-options>
	<jvm-options>-Dorg.apache.catalina.loader.WebappClassLoader.ENABLE_CLEAR_REFERENCES=false</jvm-options>
	<jvm-options>-Duser.timezone=GMT</jvm-options>
	<jvm-options>-Xmx1024m</jvm-options>]]></replacevalue>
						</replace>

						<replace file="${app.server.glassfish.instance.dir}/config/domain.xml">
							<replacetoken><![CDATA[<jvm-options>-XX:MaxPermSize=192m</jvm-options>]]></replacetoken>
							<replacevalue><![CDATA[<jvm-options>-XX:MaxPermSize=512m</jvm-options>]]></replacevalue>
						</replace>
					</then>
				</if>

				<delete>
					<fileset
						dir="${app.server.dir}/modules"
						includes="commons-codec-repackaged.jar"
					/>
				</delete>

				<copy todir="${app.server.dir}/modules">
					<fileset
						dir="lib/portal"
						includes="commons-codec.jar"
					/>
				</copy>

				<tstamp>
					<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
				</tstamp>

				<unjar
					dest="${tstamp.value}"
					src="${app.server.dir}/modules/jsf-impl.jar"
				/>

				<if>
					<available file="${tstamp.value}/META-INF/services/javax.servlet.ServletContainerInitializer" />
					<then>
						<delete file="${tstamp.value}/META-INF/services/javax.servlet.ServletContainerInitializer" />

						<zip
							basedir="${tstamp.value}"
							destfile="${app.server.dir}/modules/jsf-impl.jar"
						/>
					</then>
				</if>

				<delete dir="${tstamp.value}" />
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="geronimo" />
			<then>
				<if>
					<not>
						<available file="${app.server.bin.dir}/setenv.bat" />
					</not>
					<then>
						<copy
							file="tools/servers/geronimo/bin/setenv.bat"
							tofile="${app.server.bin.dir}/setenv.bat"
						/>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.bin.dir}/setenv.sh" />
					</not>
					<then>
						<copy
							file="tools/servers/geronimo/bin/setenv.sh"
							tofile="${app.server.bin.dir}/setenv.sh"
						/>
					</then>
				</if>

				<!--<copy todir="${app.server.lib.portal.dir}">
					<fileset
						dir="lib/development"
						includes="saxpath.jar"
					/>
				</copy>

				<delete>
					<fileset
						dir="${app.server.lib.portal.dir}"
						includes="commons-logging.jar"
					/>
				</delete>-->
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="jboss" />
			<then>
				<loadfile property="standalone.conf.content" srcfile="${app.server.bin.dir}/standalone.conf" />

				<antelope:stringutil string="${standalone.conf.content}" property="standalone.conf.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${standalone.conf.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.bin.dir}/standalone.conf">
							<replacetoken><![CDATA[JAVA_OPTS="-Xms64m -Xmx512m -XX:MaxPermSize=256m ]]></replacetoken>
							<replacevalue><![CDATA[JAVA_OPTS="]]></replacevalue>
						</replace>

						<echo file="${app.server.bin.dir}/standalone.conf" append="true">
JAVA_OPTS="$JAVA_OPTS -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -Duser.timezone=GMT -Xmx1024m -XX:MaxPermSize=256m"</echo>
					</then>
				</if>

				<loadfile property="standalone.conf.bat.content" srcfile="${app.server.bin.dir}/standalone.conf.bat" />

				<antelope:stringutil string="${standalone.conf.bat.content}" property="standalone.conf.bat.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${standalone.conf.bat.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.bin.dir}/standalone.conf.bat">
							<replacetoken><![CDATA[set "JAVA_OPTS=-Xms64M ]]></replacetoken>
							<replacevalue><![CDATA[rem set "JAVA_OPTS=-Xms64M ]]></replacevalue>
						</replace>

						<replace file="${app.server.bin.dir}/standalone.conf.bat">
							<replacetoken><![CDATA[:JAVA_OPTS_SET]]></replacetoken>
							<replacevalue><![CDATA[set "JAVA_OPTS=%JAVA_OPTS% -Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -Duser.timezone=GMT -Xmx1024m -XX:MaxPermSize=256m"

:JAVA_OPTS_SET]]></replacevalue>
						</replace>
					</then>
				</if>

				<replace file="${app.server.instance.dir}/configuration/standalone.xml">
					<replacetoken><![CDATA[<subsystem xmlns="urn:jboss:domain:web:1.0" default-virtual-server="default-host">]]></replacetoken>
					<replacevalue><![CDATA[<subsystem xmlns="urn:jboss:domain:web:1.0" default-virtual-server="default-host">
						<configuration>
							<jsp-configuration development="true" />
						</configuration>]]>
					</replacevalue>
				</replace>

				<if>
					<not>
						<available file="${app.server.lib.global.dir}/module.xml" />
					</not>
					<then>
						<copy
							file="tools/servers/jboss/modules/module.xml"
							tofile="${app.server.lib.global.dir}/module.xml"
						/>
					</then>
				</if>

				<delete>
					<fileset
						dir="${app.server.lib.portal.dir}"
						includes="eclipselink.jar"
					/>
				</delete>
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="jetty" />
			<then>
				<if>
					<not>
						<available file="${app.server.bin.dir}/run.bat" />
					</not>
					<then>
						<copy
							file="tools/servers/jetty/bin/run.bat"
							tofile="${app.server.bin.dir}/run.bat"
						/>

						<replace file="${app.server.jetty.bin.dir}/run.bat">
							<replacetoken>set "JAVA_OPTS=-D</replacetoken>
							<replacevalue>set "JAVA_OPTS=-Djetty.version=${app.server.jetty.version} -Djetty.version.date=${app.server.jetty.version.date} -D</replacevalue>
						</replace>

						<loadfile property="run.bat.content" srcfile="${app.server.jetty.bin.dir}/run.bat">
							<filterchain>
								<expandproperties />
							</filterchain>
						</loadfile>

						<echo file="${app.server.jetty.bin.dir}/run.bat">${run.bat.content}</echo>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.bin.dir}/run.sh" />
					</not>
					<then>
						<copy
							file="tools/servers/jetty/bin/run.sh"
							tofile="${app.server.bin.dir}/run.sh"
						/>

						<chmod
							file="${app.server.bin.dir}/run.sh"
							perm="a+x"
						/>

						<replace file="${app.server.jetty.bin.dir}/run.sh">
							<replacetoken>export JAVA_OPTS="-D</replacetoken>
							<replacevalue>export JAVA_OPTS="-Djetty.version=${app.server.jetty.version} -Djetty.version.date=${app.server.jetty.version.date} -D</replacevalue>
						</replace>

						<loadfile property="run.sh.content" srcfile="${app.server.jetty.bin.dir}/run.sh">
							<filterchain>
								<expandproperties />
							</filterchain>
						</loadfile>

						<echo file="${app.server.jetty.bin.dir}/run.sh">${run.sh.content}</echo>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.bin.dir}/start.ini" />
					</not>
					<then>
						<copy
							file="tools/servers/jetty/bin/start.ini"
							tofile="${app.server.bin.dir}/start.ini"
						/>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.dir}/contexts/root.xml" />
					</not>
					<then>
						<copy
							file="tools/servers/jetty/contexts/root.xml"
							tofile="${app.server.dir}/contexts/root.xml"
						/>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.dir}/etc/start.config" />
					</not>
					<then>
						<unjar src="${app.server.dir}/start.jar" dest="${app.server.dir}">
							<patternset>
								<include name="**/start.config" />
							</patternset>
							<mapper
								type="glob"
								from="org/eclipse/jetty/start/*"
								to="etc/*"
							/>
						</unjar>

						<echo file="${app.server.dir}/etc/start.config" append="true">
jetty.logs=$(jetty.home)/logs

$(jetty.home)/lib/liferay/*</echo>
					</then>
				</if>

				<copy todir="${app.server.lib.global.dir}">
					<fileset
						dir="lib/development"
						includes="activation.jar,jta.jar,mail.jar,persistence.jar"
					/>
				</copy>
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="jonas" />
			<then>
				<loadfile property="setenv.content" srcfile="${app.server.bin.dir}/setenv" />

				<antelope:stringutil string="${setenv.content}" property="setenv.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${setenv.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.bin.dir}/setenv">
							<replacetoken><![CDATA[export JAVA_OPTS]]></replacetoken>
							<replacevalue><![CDATA[JAVA_OPTS=-Dfile.encoding=UTF8 -Djava.net.preferIPv4Stack=true -Djonas.felix.configuration.file="$JONAS_ROOT/conf/felix-config.properties" -Duser.timezone=GMT -Xmx1024m -XX:MaxPermSize=256m
export JAVA_OPTS]]></replacevalue>
						</replace>
					</then>
				</if>

				<loadfile property="setenv.bat.content" srcfile="${app.server.bin.dir}/setenv.bat" />

				<antelope:stringutil string="${setenv.bat.content}" property="setenv.bat.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${setenv.bat.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.bin.dir}/setenv.bat">
							<replacetoken><![CDATA[set JONAS_CLASSPATH=%JONAS_BASE%\conf;%JONAS_CLASSPATH%]]></replacetoken>
							<replacevalue><![CDATA[set JONAS_CLASSPATH=%JONAS_BASE%\conf;%JONAS_CLASSPATH%
set JAVA_OPTS=-Dfile.encoding=UTF8 -Djava.net.preferIPv4Stack=true -Djonas.felix.configuration.file="%JONAS_ROOT%/conf/felix-config.properties" -Duser.timezone=GMT -Xmx1024m -XX:MaxPermSize=256m]]></replacevalue>
						</replace>
					</then>
				</if>

				<loadfile property="classloader-default-filtering.xml.content" srcfile="${app.server.dir}/conf/classloader-default-filtering.xml" />

				<antelope:stringutil string="${classloader-default-filtering.xml.content}" property="classloader-default-filtering.xml.content.index">
					<indexof string="net.sf.cglib.*" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${classloader-default-filtering.xml.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.dir}/conf/classloader-default-filtering.xml">
							<replacetoken><![CDATA[<filter-name>org.apache.commons.digester.*</filter-name>]]></replacetoken>
							<replacevalue><![CDATA[<filter-name>antlr.*</filter-name>
	<filter-name>EDU.oswego.*</filter-name>
	<filter-name>javassist.*</filter-name>
	<filter-name>net.sf.cglib.*</filter-name>
	<filter-name>net.sf.ehcache.*</filter-name>
	<filter-name>org.apache.commons.*</filter-name>
	<filter-name>org.dom4j.*</filter-name>
	<filter-name>org.hibernate.*</filter-name>
	<filter-name>org.jboss.*</filter-name>
	<filter-name>org.objectweb.asm.*</filter-name>
	<filter-name>org.objectweb.jotm.*</filter-name>
	<filter-name>org.quartz.*</filter-name>
	<filter-name>org.springframework.*</filter-name>]]></replacevalue>
						</replace>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.dir}/conf/felix-config.properties" />
					</not>
					<then>
						<unjar src="${app.server.dir}/lib/bootstrap/felix-launcher.jar" dest="${app.server.dir}/conf">
							<patternset>
								<include name="**/default.properties" />
							</patternset>
							<chainedmapper>
								<flattenmapper />
								<globmapper
									from="default.properties"
									to="felix-config.properties"
								/>
							</chainedmapper>
						</unjar>

						<replace file="${app.server.dir}/conf/felix-config.properties">
							<replacetoken>org.osgi.framework.system.packages=org.osgi.framework;</replacetoken>
							<replacevalue>org.osgi.framework.system.packages=com.sun.crypto.provider; com.sun.image.codec.jpeg; com.sun.jmx.interceptor; com.sun.jmx.mbeanserver; org.apache.xerces.parsers; org.apache.xerces.util; org.apache.xerces.xni; org.apache.xerces.xni.parser; org.osgi.framework;</replacevalue>
						</replace>
					</then>
				</if>

				<replace file="${app.server.dir}/conf/tomcat6-server.xml">
					<replacetoken><![CDATA[redirectPort="8443" />]]></replacetoken>
					<replacevalue><![CDATA[redirectPort="8443" URIEncoding="UTF-8" />]]></replacevalue>
				</replace>

				<replace file="${app.server.dir}/conf/tomcat6-server.xml">
					<replacetoken><![CDATA[redirectPort="9043" />]]></replacetoken>
					<replacevalue><![CDATA[redirectPort="9043" URIEncoding="UTF-8" />]]></replacevalue>
				</replace>

				<delete>
					<fileset
						dir="${app.server.lib.portal.dir}"
						includes="equinox.jar,osgi.core.jar,xalan.jar,xercesImpl.jar,xml-apis.jar"
					/>
				</delete>
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="resin" />
			<then>
				<if>
					<not>
						<available file="${app.server.bin.dir}/run.bat" />
					</not>
					<then>
						<copy
							file="tools/servers/resin/bin/run.bat"
							tofile="${app.server.bin.dir}/run.bat"
						/>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.bin.dir}/run.sh" />
					</not>
					<then>
						<copy
							file="tools/servers/resin/bin/run.sh"
							tofile="${app.server.bin.dir}/run.sh"
						/>

						<chmod
							file="${app.server.bin.dir}/run.sh"
							perm="a+x"
						/>
					</then>
				</if>

				<loadfile property="resin.xml.content" srcfile="${app.server.dir}/conf/resin.xml" />

				<antelope:stringutil string="${resin.xml.content}" property="resin.xml.content.index">
					<indexof string="-Dfile.encoding=UTF-8" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${resin.xml.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.dir}/conf/resin.xml">
							<replacetoken><![CDATA[</http>]]></replacetoken>
							<replacevalue><![CDATA[</http>

	<jvm-arg>-Dfile.encoding=UTF-8</jvm-arg>
	<jvm-arg>-Djava.net.preferIPv4Stack=true</jvm-arg>
	<jvm-arg>-Duser.timezone=GMT</jvm-arg>
	<jvm-arg>-Xmx1024m</jvm-arg>
	<jvm-arg>-XX:MaxPermSize=256m</jvm-arg>]]></replacevalue>
						</replace>
					</then>
				</if>

				<copy todir="${app.server.lib.global.dir}">
					<fileset
						dir="lib/development"
						includes="saxpath.jar"
					/>
				</copy>
			</then>
		</if>

		<if>
			<equals arg1="${app.server.type}" arg2="tomcat" />
			<then>
				<if>
					<or>
						<isset property="jdk.windows.version" />
						<not>
							<available file="${app.server.bin.dir}/setenv.bat" />
						</not>
					</or>
					<then>
						<copy
							file="tools/servers/tomcat/bin/setenv.bat"
							tofile="${app.server.bin.dir}/setenv.bat"
						>
							<filterset>
								<filter token="java.version" value="${jdk.windows.version}" />
							</filterset>
						</copy>
					</then>
				</if>

				<if>
					<or>
						<isset property="jdk.windows.version" />
						<not>
							<available file="${app.server.bin.dir}/setenv.sh" />
						</not>
					</or>
					<then>
						<copy
							file="tools/servers/tomcat/bin/setenv.sh"
							tofile="${app.server.bin.dir}/setenv.sh"
						/>
					</then>
				</if>

				<if>
					<not>
						<available file="${app.server.dir}/conf/Catalina/localhost/${app.server.tomcat.portal.context}.xml" />
					</not>
					<then>
						<copy
							file="tools/servers/tomcat/conf/Catalina/localhost/ROOT.xml"
							tofile="${app.server.dir}/conf/Catalina/localhost/${app.server.tomcat.portal.context}.xml"
							overwrite="true"
						/>
					</then>
				</if>

				<loadfile property="catalina.properties.content" srcfile="${app.server.dir}/conf/catalina.properties" />

				<antelope:stringutil string="${catalina.properties.content}" property="catalina.properties.content.index">
					<indexof string=",${catalina.home}/lib/ext/*.jar" fromindex="0" />
				</antelope:stringutil>

				<if>
					<equals arg1="${catalina.properties.content.index}" arg2="-1" />
					<then>
						<replace file="${app.server.dir}/conf/catalina.properties">
							<replacetoken><![CDATA[common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar]]></replacetoken>
							<replacevalue><![CDATA[common.loader=${catalina.base}/lib,${catalina.base}/lib/*.jar,${catalina.home}/lib,${catalina.home}/lib/*.jar,${catalina.home}/lib/ext,${catalina.home}/lib/ext/*.jar]]></replacevalue>
						</replace>
					</then>
				</if>

				<replace file="${app.server.dir}/conf/server.xml">
					<replacetoken><![CDATA[redirectPort="8443" />]]></replacetoken>
					<replacevalue><![CDATA[redirectPort="8443" URIEncoding="UTF-8" />]]></replacevalue>
				</replace>

				<!--<replace file="${app.server.dir}/conf/server.xml">
					<replacetoken><![CDATA[xmlValidation="false" xmlNamespaceAware="false">]]></replacetoken>
					<replacevalue><![CDATA[xmlValidation="false" xmlNamespaceAware="false" deployXML="false">]]></replacevalue>
				</replace>-->

				<if>
					<and>
						<available file="${jdk.windows.home}/jre/bin/java.exe" />
						<not>
							<available file="${app.server.dir}/jre${jdk.windows.version}/win" />
						</not>
					</and>
					<then>
						<copy todir="${app.server.dir}/jre${jdk.windows.version}/win">
							<fileset dir="${jdk.windows.home}/jre" />
						</copy>
					</then>
				</if>

				<ant dir="support-tomcat" target="deploy" inheritAll="false" />

				<copy todir="${app.server.lib.endorsed.dir}" flatten="true">
					<fileset
						dir="lib"
						includes="${endorsed.libraries}"
					/>
				</copy>

				<if>
					<not>
						<equals arg1="${app.server.tomcat.lib.portal.dir}" arg2="${app.server.tomcat.lib.global.dir}" />
					</not>
					<then>
						<delete failonerror="false">
							<fileset
								dir="${app.server.lib.portal.dir}"
								includes="ccpp.jar"
							/>
						</delete>
					</then>
				</if>

				<copy todir="${app.server.lib.global.dir}">
					<fileset
						dir="lib/development"
						includes="activation.jar,jms.jar,jta.jar,mail.jar,persistence.jar"
					/>
				</copy>

				<copy todir="${app.server.temp.dir}/liferay/com/liferay/portal/deploy/dependencies">
					<fileset
						dir="lib/development"
						includes="resin.jar,script-10.jar"
					/>
				</copy>

				<delete>
					<fileset
						dir="${app.server.lib.portal.dir}"
						includes="tomcat-juli.jar"
					/>
				</delete>
			</then>
		</if>

		<mkdir dir="${app.server.log.dir}" />
		<mkdir dir="${app.server.temp.dir}" />
		<mkdir dir="${app.server.work.dir}" />

		<if>
			<equals arg1="${app.server.type}" arg2="glassfish" />
			<then>
				<tstamp>
					<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
				</tstamp>

				<jar
					basedir="${app.server.portal.dir}"
					jarfile="${tstamp.value}"
				/>

				<delete dir="${app.server.portal.dir}" />

				<move file="${tstamp.value}" tofile="${app.server.portal.dir}" />
			</then>
		</if>

		<antcall target="print-current-time" />
	</target>

	<target name="deploy-properties">
		<copy todir="${app.server.classes.portal.dir}" overwrite="true">
			<fileset dir="portal-impl/src" includes="portal-*.properties,system-*.properties" />
		</copy>
	</target>

	<target name="dist">
		<ant antfile="build-dist.xml" target="dist" inheritAll="false" />
	</target>

	<target name="doc">
		<antcall target="dtddoc" />
		<antcall target="javadoc" />
		<antcall target="javadoc-all" />
		<ant dir="util-taglib" target="taglibdoc" inheritAll="false" />
	</target>

	<target name="dtddoc">
		<taskdef classname="DTDDoc.DTDDocTask" classpathref="lib.classpath" name="DTDDoc" />

		<!--<antelope:stringutil string="${lp.version}" property="lp.version.dtd">
			<replace regex="\." replacement="_" />
		</antelope:stringutil>-->

		<property name="doc.definitions.dir" value="${doc.dir}/definitions" />

		<DTDDoc
			destDir="${doc.definitions.dir}"
			docTitle = "Liferay ${lp.version} Definitions"
			showFixmeTags="false"
			showHiddenTags="false"
			sourceDir="${definitions.dir}"
		>
			<include name="liferay-*${lp.version.dtd}.dtd" />
		</DTDDoc>
	</target>

	<target name="jar">
		<ant dir="portal-service" target="jar" inheritAll="false" />

		<ant dir="util-bridges" target="jar" inheritAll="false" />
		<ant dir="util-java" target="jar" inheritAll="false" />
		<ant dir="util-taglib" target="jar" inheritAll="false" />

		<ant dir="portal-impl" target="jar" inheritAll="false" />

		<ant dir="portal-web" target="war" inheritAll="false" />

		<ant dir="support-tomcat" target="jar" inheritAll="false" />
	</target>

	<target name="javadoc">
		<property name="doc.java.dir" value="${doc.dir}/javadocs" />

		<mkdir dir="${doc.java.dir}" />

		<javadoc
			breakiterator="yes"
			classpathref="project.classpath"
			destdir="${doc.java.dir}"
			doctitle="Liferay ${lp.version} Public API Documentation"
			header="&lt;b&gt;Liferay ${lp.version}&lt;/b&gt;"
			maxmemory="1024m"
			noqualifier="java.*"
			overview="portal-service/src/portal-service-overview.html"
			stylesheetfile="${project.dir}/tools/javadoc.css"
			useexternalfile="yes"
			use="yes"
			windowtitle="Liferay ${lp.version} API"
		>
			<doclet name="com.liferay.tools.doclets.standard.Standard" path="${project.dir}/lib/development/liferay-doclet.jar">
				<param name="-linksource" />
			</doclet>

			<group title="Portal Services" packages="com.liferay.portal*:com.liferay.counter*:com.liferay.documentlibrary*:com.liferay.mail*" />
			<group title="Portal Kernel" packages="com.liferay.portal.kernel*" />
			<group title="Portlet Services" packages="com.liferay.portlet*" />
			<group title="Portlet Bridges" packages="com.liferay.util.bridges*" />

			<link href="http://docs.liferay.com/portlet-api/2.0/javadocs" />
			<link href="http://java.sun.com/javase/6/docs/api" />
			<link href="http://docs.liferay.com/portal/${lp.version.major}/javadocs" />

			<packageset dir="portal-service/src" />
			<packageset dir="util-bridges/src" />
			<packageset dir="util-java/src" />

			<tag name="generated" description="" />
		</javadoc>
	</target>

	<target name="javadoc-all">
		<property name="doc.java.dir" value="${doc.dir}/javadocs-all" />

		<mkdir dir="${doc.java.dir}" />

		<javadoc
			breakiterator="yes"
			classpathref="project.classpath"
			destdir="${doc.java.dir}"
			doctitle="Liferay ${lp.version} Internal API Documentation"
			header="&lt;b&gt;Liferay ${lp.version}&lt;/b&gt;"
			maxmemory="1024m"
			noqualifier="java.*"
			overview="portal-impl/src/portal-impl-overview.html"
			stylesheetfile="${project.dir}/tools/javadoc.css"
			useexternalfile="yes"
			use="yes"
			windowtitle="Liferay ${lp.version} Internal API"
		>
			<doclet name="com.liferay.tools.doclets.standard.Standard" path="${project.dir}/lib/development/liferay-doclet.jar">
				<param name="-linksource" />
			</doclet>

			<group title="Portal Services" packages="com.liferay.portal.service*" />
			<group title="Portlet Services" packages="com.liferay.portlet*" />

			<link href="http://docs.liferay.com/portlet-api/2.0/javadocs" />
			<link href="http://java.sun.com/javase/6/docs/api" />

			<packageset dir="portal-impl/src" />
			<packageset dir="portal-service/src" />
			<packageset dir="util-bridges/src" />
			<packageset dir="util-java/src" />
			<packageset dir="util-taglib/src" />

			<tag name="generated" description="ServiceBuilder generated this class. Modifications in this class will be overwritten the next time it is generated." />
		</javadoc>
	</target>

	<target name="prepare-generated-files">
		<ant antfile="build-dist.xml" target="prepare-generated-files" inheritAll="false" />
	</target>

	<target name="record-svn-revision">
		<exec dir="${project.dir}" executable="cmd.exe" os="${os.windows}" outputproperty="svn.info.output">
			<arg line="/c svn info" />
		</exec>

		<script classpathref="project.classpath" language="beanshell">
			String svnInfoOutput = project.getProperty("svn.info.output");

			int x = svnInfoOutput.indexOf("Revision: ");

			x = svnInfoOutput.indexOf(" ", x);

			int y = svnInfoOutput.indexOf("Node ", x);

			String revision = svnInfoOutput.substring(x, y).trim();

			project.setProperty("svn.info.revision", revision);
		</script>

		<echo file="svn-revision">Revision: ${svn.info.revision}
Username: ${svn.username}
Password: ${svn.password}
Portal: ${project.dir}
Plugins: ${lp.plugins.dir}</echo>
	</target>

	<target name="start">
		<antcall target="compile" />

		<ant dir="util-taglib" target="jar" inheritAll="false" />

		<ant dir="sql" target="build-db" inheritAll="false" />
		<ant dir="sql" target="rebuild-hypersonic" inheritAll="false" />

		<ant dir="portal-impl" target="build-themes" inheritAll="false" />

		<antcall target="jar" />

		<antcall target="print-current-time" />
	</target>

	<target name="test">
		<ant antfile="build-test.xml" target="test" inheritAll="false" />
	</target>

	<target name="update-plugins-to-svn-revision">
		<loadfile property="svn.info.revision.valid" srcfile="svn-revision" />

		<script classpathref="project.classpath" language="beanshell">
			String svnInfoOutput = project.getProperty("svn.info.revision.valid");

			int x = svnInfoOutput.indexOf("Revision: ");

			x = svnInfoOutput.indexOf(" ", x);

			int y = svnInfoOutput.indexOf("Username:", x);

			String revision = svnInfoOutput.substring(x, y).trim();

			project.setProperty("svn.info.revision", revision);
		</script>

		<exec dir="${lp.plugins.dir}" executable="cmd.exe" os="${os.windows}">
			<arg line="/c svn --username ${svn.username} --password ${svn.password} update -r ${svn.info.revision}" />
		</exec>
	</target>

	<target name="validate-xml">
		<xmlvalidate failonerror="no">
			<fileset dir="${project.dir}"
				excludes="**/dependencies/**,**/ehcache/**"
				includes="**/liferay-*.xml,**/web.xml"
			/>
			<xmlcatalog refid="dtd.catalog" />
		</xmlvalidate>
	</target>
</project>
